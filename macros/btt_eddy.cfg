[bed_mesh]
speed: 190
horizontal_move_z: 2
mesh_min: 49.13, 15
mesh_max: 257.63, 232
probe_count: 70, 70 
algorithm: bicubic
#scan_overshoot: 2  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.



[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
i2c_mcu: eddy  
i2c_bus: i2c0f 
x_offset: 48.63
y_offset: 12.75


[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_50443403107C3D1C-if00 
restart_method: command

###########################################################################


[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu 
sensor_mcu: eddy 
min_temp: 10 
max_temp: 100

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[safe_z_home]
home_xy_position: 125, 125 
z_hop: 5
z_hop_speed: 4
speed: 60

###############################Macros and related################################

[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.

[gcode_macro probe_calibrate]
rename_existing: PROBE_CALIBRATE_OLD
gcode:
    PROBE_EDDY_CURRENT_CALIBRATE_AUTO CHIP=btt_eddy


[gcode_macro G28]
rename_existing: G28.1
gcode:
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}

[gcode_macro SET_Z_FROM_PROBE]
gcode:
 {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  SET_GCODE_OFFSET_ORIG { rawparams }


[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
 BTT_BED_MESH_CALIBRATE METHOD=rapid_scan